name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        # a list of all the targets
        include:
          - TARGET: x86_64-unknown-linux-gnu
            OS: ubuntu-latest
          - TARGET: aarch64-unknown-linux-gnu
            OS: ubuntu-latest

    runs-on: ${{ matrix.OS }}
    env:
      NAME: familyphotos
      TARGET: ${{ matrix.TARGET }}
      OS: ${{ matrix.OS }}

    steps:
    - uses: actions/checkout@v4
    - name: Cargo cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ./target
        key: build-cargo-registry-${{matrix.TARGET}}
    - name: Install and configure dependencies
      run: |
        # dependencies are only needed on ubuntu as that's the only place where
        # we make cross-compilation
        if [[ $OS =~ ^ubuntu.*$ ]]; then
          sudo apt-get update && sudo apt-get install -qq crossbuild-essential-arm64
        fi
        # some additional configuration for cross-compilation on linux
        cat >>~/.cargo/config <<EOF
        [target.aarch64-unknown-linux-gnu]
        linker = "aarch64-linux-gnu-gcc"
        [target.aarch64-unknown-linux-musl]
        linker = "aarch64-linux-gnu-gcc"
        EOF
    - name: Install rust target
      run: rustup target add $TARGET
    - name: Build Release
      run: cargo build --release --verbose --target $TARGET
    - name: Upload Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: familyphotos-${{ matrix.TARGET }}
        path: target/${{ matrix.TARGET }}/release/familyphotos
        retention-days: 30
